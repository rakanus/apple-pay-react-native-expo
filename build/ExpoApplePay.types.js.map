{"version":3,"file":"ExpoApplePay.types.js","sourceRoot":"","sources":["../src/ExpoApplePay.types.ts"],"names":[],"mappings":"AAAA,MAAM,CAAN,IAAY,kBAKX;AALD,WAAY,kBAAkB;IAC5B,yCAAqB,CAAA;IACrB,yCAAqB,CAAA;IACrB,+CAA2B,CAAA;IAC3B,6CAAyB,CAAA;AAC3B,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,QAK7B;AAED,MAAM,CAAN,IAAY,cA4BX;AA5BD,WAAY,cAAc;IACxB,6BAAa,CAAA;IACb,+BAAe,CAAA;IACf,qDAAqC,CAAA;IACrC,iDAAiC,CAAA;IACjC,uCAAuB,CAAA;IACvB,mCAAmB,CAAA;IACnB,uCAAuB,CAAA;IACvB,6BAAa,CAAA;IACb,uCAAuB,CAAA;IACvB,qCAAqB,CAAA;IACrB,+BAAe,CAAA;IACf,qCAAqB,CAAA;IACrB,2CAA2B,CAAA;IAC3B,+CAA+B,CAAA;IAC/B,qCAAqB,CAAA;IACrB,iCAAiB,CAAA;IACjB,+BAAe,CAAA;IACf,+BAAe,CAAA;IACf,qCAAqB,CAAA;IACrB,uCAAuB,CAAA;IACvB,6BAAa,CAAA;IACb,mCAAmB,CAAA;IACnB,+BAAe,CAAA;IACf,qCAAqB,CAAA;IACrB,uCAAuB,CAAA;IACvB,2CAA2B,CAAA;IAC3B,6CAA6B,CAAA;AAC/B,CAAC,EA5BW,cAAc,KAAd,cAAc,QA4BzB;AAED,MAAM,CAAN,IAAY,cAGX;AAHD,WAAY,cAAc;IACxB,yDAAW,CAAA;IACX,yDAAW,CAAA;AACb,CAAC,EAHW,cAAc,KAAd,cAAc,QAGzB","sourcesContent":["export enum MerchantCapability {\n  \"3DS\" = \"supports3DS\",\n  \"EMV\" = \"supportsEMV\",\n  \"Credit\" = \"supportsCredit\",\n  \"Debit\" = \"supportsDebit\",\n}\n\nexport enum PaymentNetwork {\n  \"JCB\" = \"JCB\",\n  \"amex\" = \"amex\",\n  \"cartesBancaires\" = \"cartesBancaires\",\n  \"chinaUnionPay\" = \"chinaUnionPay\",\n  \"discover\" = \"discover\",\n  \"eftpos\" = \"eftpos\",\n  \"electron\" = \"electron\",\n  \"elo\" = \"elo\",\n  \"idCredit\" = \"idCredit\",\n  \"interac\" = \"interac\",\n  \"mada\" = \"mada\",\n  \"maestro\" = \"maestro\",\n  \"masterCard\" = \"masterCard\",\n  \"privateLabel\" = \"privateLabel\",\n  \"quicPay\" = \"quicPay\",\n  \"suica\" = \"suica\",\n  \"vPay\" = \"vPay\",\n  \"visa\" = \"visa\",\n  \"barcode\" = \"barcode\",\n  \"girocard\" = \"girocard\",\n  \"mir\" = \"mir\",\n  \"nanaco\" = \"nanaco\",\n  \"waon\" = \"waon\",\n  \"dankort\" = \"dankort\",\n  \"bancomat\" = \"bancomat\",\n  \"bancontact\" = \"bancontact\",\n  \"postFinance\" = \"postFinance\",\n}\n\nexport enum CompleteStatus {\n  success = 0, // Merchant auth'd (or expects to auth) the transaction successfully.\n  failure = 1, // Merchant failed to auth the transaction.\n}\n\nexport type PaymentData = {\n  data: string;\n  header: {\n    ephemeralPublicKey: string;\n    publicKeyHash: string;\n    transactionId: string;\n  };\n  paymentNetwork: string;\n  signature: string;\n  version: string;\n} \n\nexport type FullPaymentData = {\n  paymentData: PaymentData;\n  transactionIdentifier: any;\n  paymentMethod: any;\n}"]}